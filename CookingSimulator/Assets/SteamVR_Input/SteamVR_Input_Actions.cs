//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_default_TouchPadTouch;
        
        private static SteamVR_Action_Boolean p_default_LocomotionSwitch;
        
        private static SteamVR_Action_Boolean p_default_UISwitch;
        
        private static SteamVR_Action_Boolean p_default_SnapLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapRight;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Vector2 p_buggy_Steering;
        
        private static SteamVR_Action_Single p_buggy_Throttle;
        
        private static SteamVR_Action_Boolean p_buggy_Brake;
        
        private static SteamVR_Action_Boolean p_buggy_Reset;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        private static SteamVR_Action_Boolean p_knife_InteractUI;
        
        private static SteamVR_Action_Boolean p_knife_Teleport;
        
        private static SteamVR_Action_Boolean p_knife_GrabPinch;
        
        private static SteamVR_Action_Boolean p_knife_GrabGrip;
        
        private static SteamVR_Action_Pose p_knife_Pose;
        
        private static SteamVR_Action_Skeleton p_knife_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_knife_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_knife_Squeeze;
        
        private static SteamVR_Action_Boolean p_knife_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_knife_TouchPadTouch;
        
        private static SteamVR_Action_Boolean p_knife_LocomotionSwitch;
        
        private static SteamVR_Action_Boolean p_knife_UISwitch;
        
        private static SteamVR_Action_Boolean p_knife_SnapLeft;
        
        private static SteamVR_Action_Boolean p_knife_SnapRight;
        
        private static SteamVR_Action_Boolean p_knife_Cut;
        
        private static SteamVR_Action_Vibration p_knife_Haptic;
        
        private static SteamVR_Action_Boolean p_remote_HeadsetOnHead;
        
        private static SteamVR_Action_Vector2 p_remote_TouchPadTouch;
        
        private static SteamVR_Action_Boolean p_remote_LocomotionSwitch;
        
        private static SteamVR_Action_Boolean p_remote_UISwitch;
        
        private static SteamVR_Action_Boolean p_remote_SnapLeft;
        
        private static SteamVR_Action_Boolean p_remote_SnapRight;
        
        private static SteamVR_Action_Boolean p_remote_Click;
        
        private static SteamVR_Action_Vibration p_remote_Haptic;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 default_TouchPadTouch
        {
            get
            {
                return SteamVR_Actions.p_default_TouchPadTouch.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean default_LocomotionSwitch
        {
            get
            {
                return SteamVR_Actions.p_default_LocomotionSwitch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_UISwitch
        {
            get
            {
                return SteamVR_Actions.p_default_UISwitch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 buggy_Steering
        {
            get
            {
                return SteamVR_Actions.p_buggy_Steering.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single buggy_Throttle
        {
            get
            {
                return SteamVR_Actions.p_buggy_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Brake
        {
            get
            {
                return SteamVR_Actions.p_buggy_Brake.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Reset
        {
            get
            {
                return SteamVR_Actions.p_buggy_Reset.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_knife_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_Teleport
        {
            get
            {
                return SteamVR_Actions.p_knife_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_knife_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_knife_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose knife_Pose
        {
            get
            {
                return SteamVR_Actions.p_knife_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton knife_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_knife_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton knife_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_knife_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single knife_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_knife_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_knife_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 knife_TouchPadTouch
        {
            get
            {
                return SteamVR_Actions.p_knife_TouchPadTouch.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_LocomotionSwitch
        {
            get
            {
                return SteamVR_Actions.p_knife_LocomotionSwitch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_UISwitch
        {
            get
            {
                return SteamVR_Actions.p_knife_UISwitch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_SnapLeft
        {
            get
            {
                return SteamVR_Actions.p_knife_SnapLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_SnapRight
        {
            get
            {
                return SteamVR_Actions.p_knife_SnapRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean knife_Cut
        {
            get
            {
                return SteamVR_Actions.p_knife_Cut.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration knife_Haptic
        {
            get
            {
                return SteamVR_Actions.p_knife_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Boolean remote_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_remote_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 remote_TouchPadTouch
        {
            get
            {
                return SteamVR_Actions.p_remote_TouchPadTouch.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean remote_LocomotionSwitch
        {
            get
            {
                return SteamVR_Actions.p_remote_LocomotionSwitch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean remote_UISwitch
        {
            get
            {
                return SteamVR_Actions.p_remote_UISwitch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean remote_SnapLeft
        {
            get
            {
                return SteamVR_Actions.p_remote_SnapLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean remote_SnapRight
        {
            get
            {
                return SteamVR_Actions.p_remote_SnapRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean remote_Click
        {
            get
            {
                return SteamVR_Actions.p_remote_Click.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration remote_Haptic
        {
            get
            {
                return SteamVR_Actions.p_remote_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.default_LocomotionSwitch,
                    SteamVR_Actions.default_UISwitch,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.knife_InteractUI,
                    SteamVR_Actions.knife_Teleport,
                    SteamVR_Actions.knife_GrabPinch,
                    SteamVR_Actions.knife_GrabGrip,
                    SteamVR_Actions.knife_Pose,
                    SteamVR_Actions.knife_SkeletonLeftHand,
                    SteamVR_Actions.knife_SkeletonRightHand,
                    SteamVR_Actions.knife_Squeeze,
                    SteamVR_Actions.knife_HeadsetOnHead,
                    SteamVR_Actions.knife_TouchPadTouch,
                    SteamVR_Actions.knife_LocomotionSwitch,
                    SteamVR_Actions.knife_UISwitch,
                    SteamVR_Actions.knife_SnapLeft,
                    SteamVR_Actions.knife_SnapRight,
                    SteamVR_Actions.knife_Cut,
                    SteamVR_Actions.knife_Haptic,
                    SteamVR_Actions.remote_HeadsetOnHead,
                    SteamVR_Actions.remote_TouchPadTouch,
                    SteamVR_Actions.remote_LocomotionSwitch,
                    SteamVR_Actions.remote_UISwitch,
                    SteamVR_Actions.remote_SnapLeft,
                    SteamVR_Actions.remote_SnapRight,
                    SteamVR_Actions.remote_Click,
                    SteamVR_Actions.remote_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.default_LocomotionSwitch,
                    SteamVR_Actions.default_UISwitch,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.knife_InteractUI,
                    SteamVR_Actions.knife_Teleport,
                    SteamVR_Actions.knife_GrabPinch,
                    SteamVR_Actions.knife_GrabGrip,
                    SteamVR_Actions.knife_Pose,
                    SteamVR_Actions.knife_SkeletonLeftHand,
                    SteamVR_Actions.knife_SkeletonRightHand,
                    SteamVR_Actions.knife_Squeeze,
                    SteamVR_Actions.knife_HeadsetOnHead,
                    SteamVR_Actions.knife_TouchPadTouch,
                    SteamVR_Actions.knife_LocomotionSwitch,
                    SteamVR_Actions.knife_UISwitch,
                    SteamVR_Actions.knife_SnapLeft,
                    SteamVR_Actions.knife_SnapRight,
                    SteamVR_Actions.knife_Cut,
                    SteamVR_Actions.remote_HeadsetOnHead,
                    SteamVR_Actions.remote_TouchPadTouch,
                    SteamVR_Actions.remote_LocomotionSwitch,
                    SteamVR_Actions.remote_UISwitch,
                    SteamVR_Actions.remote_SnapLeft,
                    SteamVR_Actions.remote_SnapRight,
                    SteamVR_Actions.remote_Click};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.knife_Haptic,
                    SteamVR_Actions.remote_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.knife_Haptic,
                    SteamVR_Actions.remote_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.knife_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_LocomotionSwitch,
                    SteamVR_Actions.default_UISwitch,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.knife_InteractUI,
                    SteamVR_Actions.knife_Teleport,
                    SteamVR_Actions.knife_GrabPinch,
                    SteamVR_Actions.knife_GrabGrip,
                    SteamVR_Actions.knife_HeadsetOnHead,
                    SteamVR_Actions.knife_LocomotionSwitch,
                    SteamVR_Actions.knife_UISwitch,
                    SteamVR_Actions.knife_SnapLeft,
                    SteamVR_Actions.knife_SnapRight,
                    SteamVR_Actions.knife_Cut,
                    SteamVR_Actions.remote_HeadsetOnHead,
                    SteamVR_Actions.remote_LocomotionSwitch,
                    SteamVR_Actions.remote_UISwitch,
                    SteamVR_Actions.remote_SnapLeft,
                    SteamVR_Actions.remote_SnapRight,
                    SteamVR_Actions.remote_Click};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.knife_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.knife_TouchPadTouch,
                    SteamVR_Actions.remote_TouchPadTouch};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.knife_SkeletonLeftHand,
                    SteamVR_Actions.knife_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_TouchPadTouch,
                    SteamVR_Actions.default_LocomotionSwitch,
                    SteamVR_Actions.default_UISwitch,
                    SteamVR_Actions.default_SnapLeft,
                    SteamVR_Actions.default_SnapRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.knife_InteractUI,
                    SteamVR_Actions.knife_Teleport,
                    SteamVR_Actions.knife_GrabPinch,
                    SteamVR_Actions.knife_GrabGrip,
                    SteamVR_Actions.knife_Squeeze,
                    SteamVR_Actions.knife_HeadsetOnHead,
                    SteamVR_Actions.knife_TouchPadTouch,
                    SteamVR_Actions.knife_LocomotionSwitch,
                    SteamVR_Actions.knife_UISwitch,
                    SteamVR_Actions.knife_SnapLeft,
                    SteamVR_Actions.knife_SnapRight,
                    SteamVR_Actions.knife_Cut,
                    SteamVR_Actions.remote_HeadsetOnHead,
                    SteamVR_Actions.remote_TouchPadTouch,
                    SteamVR_Actions.remote_LocomotionSwitch,
                    SteamVR_Actions.remote_UISwitch,
                    SteamVR_Actions.remote_SnapLeft,
                    SteamVR_Actions.remote_SnapRight,
                    SteamVR_Actions.remote_Click};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_TouchPadTouch = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/default/in/TouchPadTouch")));
            SteamVR_Actions.p_default_LocomotionSwitch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/LocomotionSwitch")));
            SteamVR_Actions.p_default_UISwitch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/UISwitch")));
            SteamVR_Actions.p_default_SnapLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapLeft")));
            SteamVR_Actions.p_default_SnapRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapRight")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_buggy_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            SteamVR_Actions.p_buggy_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            SteamVR_Actions.p_buggy_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            SteamVR_Actions.p_buggy_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
            SteamVR_Actions.p_knife_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/InteractUI")));
            SteamVR_Actions.p_knife_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/Teleport")));
            SteamVR_Actions.p_knife_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/GrabPinch")));
            SteamVR_Actions.p_knife_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/GrabGrip")));
            SteamVR_Actions.p_knife_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/Knife/in/Pose")));
            SteamVR_Actions.p_knife_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/Knife/in/SkeletonLeftHand")));
            SteamVR_Actions.p_knife_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/Knife/in/SkeletonRightHand")));
            SteamVR_Actions.p_knife_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/Knife/in/Squeeze")));
            SteamVR_Actions.p_knife_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/HeadsetOnHead")));
            SteamVR_Actions.p_knife_TouchPadTouch = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Knife/in/TouchPadTouch")));
            SteamVR_Actions.p_knife_LocomotionSwitch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/LocomotionSwitch")));
            SteamVR_Actions.p_knife_UISwitch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/UISwitch")));
            SteamVR_Actions.p_knife_SnapLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/SnapLeft")));
            SteamVR_Actions.p_knife_SnapRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/SnapRight")));
            SteamVR_Actions.p_knife_Cut = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Knife/in/Cut")));
            SteamVR_Actions.p_knife_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/Knife/out/Haptic")));
            SteamVR_Actions.p_remote_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Remote/in/HeadsetOnHead")));
            SteamVR_Actions.p_remote_TouchPadTouch = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/Remote/in/TouchPadTouch")));
            SteamVR_Actions.p_remote_LocomotionSwitch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Remote/in/LocomotionSwitch")));
            SteamVR_Actions.p_remote_UISwitch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Remote/in/UISwitch")));
            SteamVR_Actions.p_remote_SnapLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Remote/in/SnapLeft")));
            SteamVR_Actions.p_remote_SnapRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Remote/in/SnapRight")));
            SteamVR_Actions.p_remote_Click = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/Remote/in/Click")));
            SteamVR_Actions.p_remote_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/Remote/out/Haptic")));
        }
    }
}
